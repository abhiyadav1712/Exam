Ass 4


#touch main.tf

data "aws_ami" "ubuntu" {
  most_recent = true
  owners      = ["099720109477"]
  filter {
    name   = "name"
    values = ["ubuntu/images/hvm-ssd/ubuntu-jammy-22.04-amd64-server-*"]
  }
}


provider "aws" {
  region = "eu-north-1"
}

resource "aws_security_group" "mini_finance_sg" {
  name        = "mini-finance-sg"
  description = "Allow SSH and HTTP"
  ingress {
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }
  ingress {
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }
  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }
}

resource "aws_instance" "mini_finance_app" {
  ami                    = "ami-0c1ac8a41498c1a9c"
  instance_type          = "t2.micro"
  key_name               = "mykey"  # Must exist in AWS EC2
  vpc_security_group_ids = [aws_security_group.mini_finance_sg.id]

  root_block_device {
    volume_size = 10
    volume_type = "gp2"
  }

  user_data = <<-EOF
              #!/bin/bash
              apt update -y
              apt install -y apache2 wget unzip vim
              cd /var/www/html
              wget https://www.tooplate.com/zip-templates/2135_mini_finance.zip
              unzip 2135_mini_finance.zip
              cp -r 2135_mini_finance/* .
              rm -rf 2135_mini_finance 2135_mini_finance.zip
              systemctl restart apache2
              EOF

  tags = {
    Name = "MiniFinanceWebApp"
  }
  
#   terraform init        # If not already done
#terraform plan        # Review changes
#terraform apply       # Deploy instance
}


aws configure